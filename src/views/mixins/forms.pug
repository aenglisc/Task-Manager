- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  - const confirm = _.get(options, 'confirm');
  form(action= url method= isStandart ? method : 'post' data-confirm= confirm ? `You are about to delete ${confirm}, are you sure?` : undefined)
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, placeholder, options = { as: 'text', small: false })
  - const value = (f.object[property] === undefined || options['as'] === 'password') ? '' : f.object[property]
  - const small = _.get(options, 'small');
  .form-group
    input(name=getInputName(f, property) class='form-control' class=(f.errors[property] && 'border-danger') placeholder=`${placeholder}` type=options['as'] value=`${value}`)

mixin button(f, value = 'Save', type = 'submit')
  .form-group
    input(class='btn btn-block btn-primary' type=`${type}` value=`${value}`)

mixin selectStatus(f, property, statuses, selected)
  .form-group
    select.custom-select(name=getInputName(f, property) class=(f.errors[property] && 'border-danger') class='form-control')
      if statuses
        for status in statuses 
          if selected == status.id
            option(value= status.id, selected= '')= `Status: ${status.name}`
          else
            option(value= status.id)= `Status: ${status.name}`

mixin selectUser(f, property, users, selected)
  .form-group
    select.custom-select(name=getInputName(f, property) class=(f.errors[property] && 'border-danger') class='form-control')
      if !selected
        option(value='', selected='', disabled='', hidden='')= 'Select an assignee'
      if users
        each user in users
          if selected == user.id
            option(value= user.id, selected= '')= `Assign to: ${user.fullName}`
          else
            option(value= user.id)= `Assign to: ${user.fullName}`

mixin searchSelect(title, queryName, options, selector)
  .form-group
    select.custom-select.text-truncate.border-success(name=queryName class='form-control mb-2 mr-sm-2 mb-sm-0')
      if options
        if selector == ''
          option(selected='selected' value='')= `${title}: -`
        else
          option(value='')= `${title}: -`
        for option in options 
          if selector == option.id
            option(selected='selected' value= option.id)= `${title}: ${option.fullName && option.id == id ? 'me' : option.fullName || option.name}`
          else
            option(value= option.id)= `${title}: ${option.fullName && option.id == id ? 'me' : option.fullName || option.name}`


mixin textarea(f, property, placeholder, content)
  .form-group
    textarea(name=getInputName(f, property) class='form-control' class=(f.errors[property] && 'border-danger') rows='3' placeholder=`${placeholder}`)= content